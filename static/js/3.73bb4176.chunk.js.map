{"version":3,"sources":["hoc/withAuthRedirect.js","components/profile/ProfileInfo/ProfileInfo.module.css","components/profile/My post/MyPost.module.css","components/profile/My post/Post/Post.module.css","components/profile/My post/Post/Post.jsx","components/profile/My post/MyPost.jsx","components/profile/My post/MyPostContainer.jsx","components/profile/ProfileInfo/ProfileStatus.jsx","components/profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/profile/ProfileInfo/ProfileInfo.jsx","components/profile/Profile.jsx","components/profile/ProfileInfo/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","s","item","src","message","likesCount","MyPost","memo","postsElements","posts","map","p","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","placeholder","name","validate","required","MyPostContainer","profilePage","dispatch","type","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","photos","large","Preloader","Profile","ProfileContainer","userId","match","params","authorisedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.73bb4176.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to = '/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3RN2K\",\"img\":\"ProfileInfo_img__70qwa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPost_postsBlock__1Uc_N\",\"posts\":\"MyPost_posts__AvG5m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__4mAET\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props)=> {\r\n   return (\r\n      <div className={s.item}>\r\n        <img src='https://get.wallhere.com/photo/1600x1200-px-action-adventure-alien-aliens-Avatar-fantasy-fi-fighting-futuristic-sci-warrior-1635355.jpg'></img>\r\n        <div></div>\r\n        {props.message}\r\n        <div>\r\n        <span>like {props.likesCount}</span>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n    )\r\n}\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport s from './MyPost.module.css';\r\nimport Post from './Post/Post';\r\nimport {maxLengthCreator, required} from './../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\n\r\n\r\nconst MyPost = React.memo(props => {\r\n \r\n    let postsElements = props.posts.map( p => <Post message={p.message} \r\n        likesCount={p.likesCount}/>)\r\n\r\n   \r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n    <div className={s.postsBlock}>\r\n        <h3>My posts</h3>\r\n        <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n        <div className={s.posts}>\r\n         {postsElements}\r\n         <Post />\r\n        </div>\r\n    </div>\r\n\r\n\r\n    )\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return(\r\n    <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea} placeholder={'Post message'} name={'newPostText'} validate={[required, maxLength10]}/>\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'profileAddNewPostForm'})(AddNewPostForm);\r\n\r\nexport default MyPost;","import React from 'react';\r\nimport MyPost from './MyPost';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        \r\n        addPost: (newPostText) => {\r\n            dispatch({type:'ADD-POST', newPostText: newPostText})\r\n        }\r\n    }\r\n}\r\nconst MyPostContainer = connect (mapStateToProps, mapDispatchToProps)(MyPost)\r\nexport default MyPostContainer;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component  {\r\n    \r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n        \r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status){\r\n            this.setStatus({\r\n                status: this.props.status\r\n            });\r\n    }\r\n}\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || '---------'}</span>\r\n                </div>}\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} \r\n                    value={this.state.status}/>\r\n                </div>}\r\n            </div>\r\n\r\n\r\n    )\r\n}\r\n}\r\n\r\nexport default ProfileStatus;","import React, { useEffect, useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {   \r\n     \r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n   \r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);       \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || '---------'}</span>\r\n            </div>}\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                value={status}/>\r\n            </div>}\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = (props)=> {\r\n    if (!props.profile){\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n    <div>\r\n       \r\n        {/* <div>\r\n            <img className={s.img} src='https://img3.goodfon.ru/original/4368x2912/1/2f/ozero-gory-lesa-derevya.jpg'></img>\r\n        </div> */}\r\n        <div className={s.descriptionBlock}>\r\n            <img src={props.profile.photos.large}/>\r\n          <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n        </div>\r\n        \r\n    </div>\r\n\r\n\r\n    )\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostContainer from './My post/MyPostContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props)=> {\r\n   \r\n    return (\r\n    <div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n        <MyPostContainer />\r\n    </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Profile;","import * as axios from 'axios';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect';\r\nimport Profile from '../Profile';\r\nimport {getUserProfile, getStatus, updateStatus} from './../../../Redux/profile-reducer'\r\n\r\n\r\n\r\nclass ProfileContainer  extends React.Component {\r\n\r\n    componentDidMount (){\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) { \r\n            userId = this.props.authorisedUserId;\r\n            if (!userId){\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);                        \r\n    }\r\n\r\n    render(){\r\n        \r\n        return (\r\n        <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n            )\r\n        }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorisedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter)(ProfileContainer);\r\n\r\n"],"sourceRoot":""}